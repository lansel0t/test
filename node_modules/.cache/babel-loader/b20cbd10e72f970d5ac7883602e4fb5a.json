{"ast":null,"code":"import { HijriParser, isNullOrUndefined } from '@syncfusion/ej2-base';\n\nvar Gregorian =\n/** @class */\nfunction () {\n  function Gregorian() {}\n\n  Gregorian.prototype.firstDateOfMonth = function (date) {\n    return new Date(date.getFullYear(), date.getMonth());\n  };\n\n  Gregorian.prototype.lastDateOfMonth = function (dt) {\n    return new Date(dt.getFullYear(), dt.getMonth() + 1, 0);\n  };\n\n  Gregorian.prototype.isMonthStart = function (date) {\n    return date.getDate() === 1;\n  };\n\n  Gregorian.prototype.getLeapYearDaysCount = function () {\n    return 366;\n  };\n\n  Gregorian.prototype.getYearDaysCount = function (date, interval) {\n    return (date.getFullYear() + interval) % 4 === 0 ? 366 : 365;\n  };\n\n  Gregorian.prototype.getDate = function (date) {\n    return date.getDate();\n  };\n\n  Gregorian.prototype.getMonth = function (date) {\n    return date.getMonth() + 1;\n  };\n\n  Gregorian.prototype.getFullYear = function (date) {\n    return date.getFullYear();\n  };\n\n  Gregorian.prototype.getYearLastDate = function (date, interval) {\n    return new Date(date.getFullYear() + interval, 0, 0);\n  };\n\n  Gregorian.prototype.getMonthDaysCount = function (date) {\n    return this.lastDateOfMonth(date).getDate();\n  };\n\n  Gregorian.prototype.getMonthStartDate = function (date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes());\n  };\n\n  Gregorian.prototype.getMonthEndDate = function (date) {\n    date.setDate(1);\n    return new Date(date.setMonth(date.getMonth() + 1));\n  };\n\n  Gregorian.prototype.getExpectedDays = function (date, days) {\n    return days;\n  };\n\n  Gregorian.prototype.setDate = function (dateObj, date) {\n    dateObj.setDate(date);\n  };\n\n  Gregorian.prototype.setValidDate = function (date, interval, startDate, monthValue, beginDate) {\n    if (!isNullOrUndefined(beginDate)) {\n      date.setMonth((beginDate ? monthValue : date.getMonth()) + interval);\n    } else {\n      date.setMonth(date.getMonth() + interval, startDate);\n    }\n  };\n\n  Gregorian.prototype.setMonth = function (date, interval, startDate) {\n    date.setFullYear(date.getFullYear());\n    date.setMonth(interval - 1);\n    date.setDate(startDate);\n  };\n\n  Gregorian.prototype.addYears = function (date, interval) {\n    date.setFullYear(date.getFullYear() + interval);\n  };\n\n  Gregorian.prototype.isSameMonth = function (date1, date2) {\n    return date1.getMonth() === date2.getMonth();\n  };\n\n  Gregorian.prototype.checkMonth = function (date, months) {\n    return months.indexOf(date.getMonth() + 1) === -1;\n  };\n\n  Gregorian.prototype.compareMonth = function (date1, date2) {\n    return date1.getMonth() > date2.getMonth();\n  };\n\n  Gregorian.prototype.isSameYear = function (date1, date2) {\n    return date1.getFullYear() === date2.getFullYear();\n  };\n\n  Gregorian.prototype.isLastMonth = function (date) {\n    return date.getMonth() === 11;\n  };\n\n  Gregorian.prototype.isLeapYear = function (year, interval) {\n    return (year + interval) % 4 === 0;\n  };\n\n  return Gregorian;\n}();\n\nexport { Gregorian };\n\nvar Islamic =\n/** @class */\nfunction () {\n  function Islamic() {}\n\n  Islamic.prototype.firstDateOfMonth = function (date) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month, 1);\n    return gDate;\n  };\n\n  Islamic.prototype.lastDateOfMonth = function (date) {\n    var hDate = this.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month, this.getDaysInMonth(hDate.month, hDate.year));\n    var finalGDate = new Date(gDate.getTime());\n    new Date(finalGDate.setDate(finalGDate.getDate() + 1));\n    var finalHDate = this.getHijriDate(finalGDate);\n\n    if (hDate.month === finalHDate.month) {\n      return finalGDate;\n    }\n\n    finalHDate = HijriParser.getHijriDate(gDate);\n\n    if (hDate.month === finalHDate.month) {\n      return gDate;\n    }\n\n    return new Date(gDate.setDate(gDate.getDate() - 1));\n  };\n\n  Islamic.prototype.isMonthStart = function (date) {\n    var hijriDate = this.getHijriDate(date);\n    return hijriDate.date === 1;\n  };\n\n  Islamic.prototype.getLeapYearDaysCount = function () {\n    return 355;\n  };\n\n  Islamic.prototype.getYearDaysCount = function (date, interval) {\n    var hDate = this.getHijriDate(date);\n    return this.isLeapYear(hDate.year, interval) ? 355 : 354;\n  };\n\n  Islamic.prototype.getDate = function (date) {\n    var hijriDate = this.getHijriDate(date);\n    return hijriDate.date;\n  };\n\n  Islamic.prototype.getMonth = function (date) {\n    var hDate = this.getHijriDate(date);\n    return hDate.month;\n  };\n\n  Islamic.prototype.getFullYear = function (date) {\n    var hDate = this.getHijriDate(date);\n    return hDate.year;\n  };\n\n  Islamic.prototype.getYearLastDate = function (date, interval) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year + interval, 1, 0);\n    return gDate;\n  };\n\n  Islamic.prototype.getMonthDaysCount = function (date) {\n    var maxDate = this.lastDateOfMonth(date);\n    var hijriDate = this.getHijriDate(maxDate);\n    return hijriDate.date;\n  };\n\n  Islamic.prototype.getMonthStartDate = function (date) {\n    var firstDate = this.firstDateOfMonth(date);\n    return new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate(), date.getHours(), date.getMinutes());\n  };\n\n  Islamic.prototype.getMonthEndDate = function (date) {\n    var lastDate = this.lastDateOfMonth(date);\n    lastDate.setDate(lastDate.getDate() + 1);\n    return new Date(lastDate.setMonth(lastDate.getMonth()));\n  };\n\n  Islamic.prototype.getExpectedDays = function (date, days) {\n    var hDate = this.getHijriDate(date);\n    var day = [];\n\n    for (var i = 0; i < days.length; i++) {\n      var gDate = HijriParser.toGregorian(hDate.year, hDate.month, days[i]);\n      day.push(gDate.getDate());\n    }\n\n    return day;\n  };\n\n  Islamic.prototype.setDate = function (dateObj, date) {\n    var hDate = HijriParser.getHijriDate(dateObj);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month, date);\n    this.updateDateObj(dateObj, gDate);\n  };\n\n  Islamic.prototype.setValidDate = function (date, interval, startDate, monthValue, beginDate) {\n    var firstDate = !isNullOrUndefined(beginDate) ? this.firstDateOfMonth(beginDate) : date;\n    var hDate = HijriParser.getHijriDate(firstDate);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month + interval, startDate);\n    this.updateDateObj(date, gDate);\n  };\n\n  Islamic.prototype.setMonth = function (date, interval, startDate) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year, interval, startDate);\n    this.updateDateObj(date, gDate);\n  };\n\n  Islamic.prototype.addYears = function (date, interval, monthValue) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year + interval, monthValue, 1);\n    this.updateDateObj(date, gDate);\n  };\n\n  Islamic.prototype.isSameMonth = function (date1, date2) {\n    var currentHijri = this.getHijriDate(date1);\n    var tempHijri = this.getHijriDate(date2);\n    return currentHijri.month === tempHijri.month;\n  };\n\n  Islamic.prototype.checkMonth = function (date, months) {\n    var hDate = this.getHijriDate(date);\n    return months.indexOf(hDate.month) === -1;\n  };\n\n  Islamic.prototype.compareMonth = function (date1, date2) {\n    var hDate = this.getHijriDate(date1);\n    var hDate1 = this.getHijriDate(date2);\n    return hDate.month > hDate1.month;\n  };\n\n  Islamic.prototype.isSameYear = function (date1, date2) {\n    var hDate = this.getHijriDate(date1);\n    var hDate1 = this.getHijriDate(date2);\n    return hDate.year === hDate1.year;\n  };\n\n  Islamic.prototype.isLastMonth = function (date) {\n    var hDate = this.getHijriDate(date);\n    return hDate.month === 12;\n  };\n\n  Islamic.prototype.updateDateObj = function (date, gDate) {\n    date.setFullYear(gDate.getFullYear(), gDate.getMonth(), gDate.getDate());\n  };\n\n  Islamic.prototype.isLeapYear = function (year, interval) {\n    return (14 + 11 * (year + interval)) % 30 < 11;\n  };\n\n  Islamic.prototype.getDaysInMonth = function (month, year) {\n    var length = 0;\n    length = 29 + (month + 1) % 2;\n\n    if (month === 11 && this.isLeapYear(year, 0)) {\n      length++;\n    }\n\n    return length;\n  };\n\n  Islamic.prototype.getHijriDate = function (date) {\n    return HijriParser.getHijriDate(date);\n  };\n\n  return Islamic;\n}();\n\nexport { Islamic };","map":null,"metadata":{},"sourceType":"module"}